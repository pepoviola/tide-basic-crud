name: Rust

on:
  push:
    branches: [ main, test-ci ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tide
        ports:
          # will assign a random free host port
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Run cargo fmt
      run: cargo fmt --all -- --check

    - name: Load schema
      working-directory: tests
      env:
        # the in-container port is always 5432
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/tide
      run: |
        export CONTAINER_ID=$(docker ps --filter "ancestor=postgres:12" --format "{{.ID}}")
        docker cp schema.sql $CONTAINER_ID:/schema.sql
        docker exec $CONTAINER_ID bash -c "psql -d $DATABASE_URL -f ./schema.sql"

    - name: Build
      run: cargo build
      env:
          DATABASE_URL: postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/tide

    - name: Run test
      run: cargo test
      env:
          DATABASE_URL: postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/tide

    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
      env:
          DATABASE_URL: postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/tide
